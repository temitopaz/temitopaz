--combine data into single table--

CREATE TABLE IF NOT EXISTS `capstone-072023.bikeshare_data.combined_data` 
AS ( 
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-06_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-07_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-08_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-09_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-10_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-11_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2022-12_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2023-01_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2023-02_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2023-03_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2023-04_tripdata` 
  UNION ALL
  SELECT * 
  FROM `capstone-072023.bikeshare_data.2023-05_tripdata` 
)

--preview new table--
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
LIMIT 100

--count rows--
SELECT
  COUNT(*) AS total_rows
FROM `capstone-072023.bikeshare_data.combined_data`

--DATA CLEANING 

--check datatypes-- 
SELECT column_name, data_type
FROM `capstone-072023.bikeshare_data`.INFORMATION_SCHEMA.COLUMNS
WHERE table_name = 'combined_data';

--check for duplicates--
SELECT 
  COUNT(ride_id) - COUNT (DISTINCT ride_id) AS duplicate_rows
FROM `capstone-072023.bikeshare_data.combined_data`

--verify rideable_type column data
SELECT rideable_type,
COUNT (*)
FROM `capstone-072023.bikeshare_data.combined_data` 
GROUP BY rideable_type

--verify member_casual column data
SELECT member_casual,
COUNT (*)
FROM `capstone-072023.bikeshare_data.combined_data` 
GROUP BY member_casual

-- checking for number of null values in all columns-- 

SELECT COUNT(*) - COUNT(ride_id) ride_id,
 COUNT(*) - COUNT(rideable_type) rideable_type,
 COUNT(*) - COUNT(started_at) started_at,
 COUNT(*) - COUNT(ended_at) ended_at,
 COUNT(*) - COUNT(start_station_name) start_station_name,
 COUNT(*) - COUNT(start_station_id) start_station_id,
 COUNT(*) - COUNT(end_station_name) end_station_name,
 COUNT(*) - COUNT(end_station_id) end_station_id,
 COUNT(*) - COUNT(start_lat) start_lat,
 COUNT(*) - COUNT(start_lng) start_lng,
 COUNT(*) - COUNT(end_lat) end_lat,
 COUNT(*) - COUNT(end_lng) end_lng,
 COUNT(*) - COUNT(member_casual) member_casual
FROM `capstone-072023.bikeshare_data.combined_data`

--view rows with null start station name and non-null id -- 
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name IS NOT NULL AND start_station_id IS NULL 

--what is Elizabeth St & Randolph St station id?--
SELECT start_station_id
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name = 'Elizabeth St & Randolph St'
AND start_station_id IS NOT NULL

--update table with E&R station id--
UPDATE `capstone-072023.bikeshare_data.combined_data`
SET start_station_id = "23001"
WHERE start_station_name = 'Elizabeth St & Randolph St'
AND start_station_id IS NULL 

-- view null start station id, non null station name updated 
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name IS NOT NULL AND start_station_id IS NULL

--find Stony Island Ave & 63rd St station id--
SELECT start_station_id
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name = 'Stony Island Ave & 63rd St'
AND start_station_id IS NOT NULL

--update table with Stony Island & 63rd start station id--
UPDATE `capstone-072023.bikeshare_data.combined_data`
SET start_station_id = "653B"
WHERE start_station_name = 'Stony Island Ave & 63rd St'
AND start_station_id IS NULL

--view rows will null start station name and non-null id --
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name IS NOT NULL AND start_station_id IS NULL

--delete rows that are missing start station name and start station id--
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE start_station_name IS NULL AND start_station_id IS NULL

--view rows with null end station name and non-null id -- 
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE end_station_name IS NOT NULL AND end_station_id IS NULL 

--update 'Elizabeth St & Randolph St' end station id--
UPDATE `capstone-072023.bikeshare_data.combined_data`
SET end_station_id = "23001"
WHERE end_station_name = 'Elizabeth St & Randolph St'
AND end_station_id IS NULL 

--update table with Stony Island & 63rd end station id--
UPDATE `capstone-072023.bikeshare_data.combined_data`
SET end_station_id = "653B"
WHERE end_station_name = 'Stony Island Ave & 63rd St'
AND end_station_id IS NULL

--check for null end station name and non-null end station id
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE end_station_name IS NULL AND end_station_id IS NOT NULL

--delete rows that are missing end station name and end station id--
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE end_station_name IS NULL AND end_station_id IS NULL

--check number of missing end_lat and end_lng
SELECT 
COUNT(*) - COUNT(end_lat) end_lat,
COUNT(*) - COUNT(end_lng) end_lng, 
FROM `capstone-072023.bikeshare_data.combined_data` 

--delete null values from end_lat and end_lng 
DELETE FROM `capstone-072023.bikeshare_data.combined_data` 
WHERE end_lat IS NULL OR end_lng IS NULL

--check that start/end station name/id now have no null values and end_lat/end_lng have no null values
SELECT
COUNT(*) - COUNT(start_station_name) start_station_name,
COUNT(*) - COUNT(start_station_id) start_station_id,
COUNT(*) - COUNT(end_station_name) end_station_name,
COUNT(*) - COUNT(end_station_id) end_station_id,
COUNT(*) - COUNT(end_lat) end_lat,
COUNT(*) - COUNT(end_lng) end_lng,
FROM `capstone-072023.bikeshare_data.combined_data`

--view dataset
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`
LIMIT 1000 

--check empty start station name and id 
SELECT 
COUNT (start_station_name),
COUNT(start_station_id) 
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE LENGTH(start_station_name) = 0 AND LENGTH(start_station_id) = 0

--delete rows where start station name and id have 0 characters
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE LENGTH(start_station_name) = 0 AND LENGTH(start_station_id) = 0

--check end station name and id charater length
SELECT
COUNT(end_station_name),
COUNT(end_station_id)
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE LENGTH(end_station_name) = 0 AND LENGTH(end_station_id) = 0

--delete end station name and id where character length = 0
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE LENGTH(end_station_name) = 0 AND LENGTH(end_station_id) = 0

--view dataset
SELECT *
FROM `capstone-072023.bikeshare_data.combined_data`

--how many rows now? 
SELECT
COUNT(*)
FROM `capstone-072023.bikeshare_data.combined_data` 

--add ride length column
ALTER TABLE `capstone-072023.bikeshare_data.combined_data`
ADD COLUMN ride_length_minutes INTEGER

--calculate and add ride minutes to ride_length_mintues column
UPDATE `capstone-072023.bikeshare_data.combined_data`
set ride_length_minutes = DATE_DIFF(ended_at, started_at, minute)
WHERE ride_length_minutes IS NULL

--how many trips less than 1 mintute
SELECT COUNT(ride_length_minutes)
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE ride_length_minutes < 1

--delete trips less than 1 minute
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE ride_length_minutes < 1

--how many trips more than 24 hours
SELECT COUNT(ride_length_minutes)
FROM `capstone-072023.bikeshare_data.combined_data`
WHERE ride_length_minutes > 1440

--delete trips more than 24 hours
DELETE FROM `capstone-072023.bikeshare_data.combined_data`
WHERE ride_length_minutes > 1440

--create new final table with updated columns and new day of week and month columns

CREATE TABLE IF NOT EXISTS bikeshare_data.cleaned_data AS(
SELECT ride_id, rideable_type, started_at, ended_at,
CASE EXTRACT (DAYOFWEEK
FROM started_at)
WHEN 1 THEN 'Sunday'
WHEN 2 THEN 'Monday'
WHEN 3 THEN 'Tuesday'
WHEN 4 THEN 'Wednesday'
WHEN 5 THEN 'Thursday'
WHEN 6 THEN 'Friday'
WHEN 7 THEN 'Saturday'
END AS day_of_week,
CASE EXTRACT(MONTH FROM started_at)
WHEN 1 THEN 'January'
WHEN 2 THEN 'February'
WHEN 3 THEN 'March'
WHEN 4 THEN 'April'
WHEN 5 THEN 'May'
WHEN 6 THEN 'June'
WHEN 7 THEN 'July'
WHEN 8 THEN 'August'
WHEN 9 THEN 'September'
WHEN 10 THEN 'October'
WHEN 11 THEN 'November'
WHEN 12 THEN 'December'
END AS month,
start_station_name, start_station_id, end_station_name, end_station_id, start_lat, start_lng, end_lat, end_lng,
member_casual, ride_length, ride_length_minutes
FROM `capstone-072023.bikeshare_data.combined_data`
)
